from AlphaGo.go import BLACK, WHITE
from AlphaGo.preprocessing import nakade

import unittest
import parseboard


class TestNakade(unittest.TestCase):

    @classmethod
    def setup_class(clazz):
        nakade.initialize_hash()

    def test_is_nakade_self_atari_3_0(self):
        board = \
        "B B a . W B . . . . . . . . . . . . .|" + \
        "W W W W W B . . . . . . . . . . . . .|" + \
        "B B B B B . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|"

        st, moves = parseboard.parse(board)

        self._assert_nakade_self_atari(st, moves['a'], BLACK)

    def test_is_nakade_self_atari_4_0(self):
        board = \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . B . . .|" + \
        ". . . . . . . . . . . . . . . . B B .|" + \
        ". . . . . . . . . . . . . . B B W W W|" + \
        ". . . . . . . . . . . . . B . W W a .|" + \
        ". . . . . . . . . . . . . . . W B B B|"

        st, moves = parseboard.parse(board)

        self._assert_nakade_self_atari(st, moves['a'], BLACK)

    def test_is_nakade_self_atari_5_0(self):
        board = \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . B B B .|" + \
        ". . . . . . . . . . . . . B B W W W W|" + \
        ". . . . . . . . . . . . B . W W B . W|" + \
        ". . . . . . . . . . . . B . W B B a W|" + \
        ". . . . . . . . . . . . . . W W B W W|"

        st, moves = parseboard.parse(board)

        self._assert_nakade_self_atari(st, moves['a'], BLACK)

    def test_nakade3_0(self):
        board = \
        ". B B B B B . . . . . . . . . . . . .|" + \
        "B W W W W W B . . . . . . . . . . . .|" + \
        "B W . b . W B . . . . . . . . . . . .|" + \
        "B W W a W W B . . . . . . . . . . . .|" + \
        ". B B B B B . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|"

        st, moves = parseboard.parse(board)

        self._assert_vital_point(st, WHITE, moves['a'], moves['b'])

    def test_nakade3_0_edge(self):
        board = \
        ". b . W B . . . . . . . . . . . . . .|" + \
        "a W W W B . . . . . . . . . . . . . .|" + \
        "B B B B B . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|"

        st, moves = parseboard.parse(board)

        self._assert_vital_point(st, WHITE, moves['a'], moves['b'])

    def test_nakade3_1(self):
        board = \
        ". B B B . . . . . . . . . . . . . . .|" + \
        "B W W W B . . . . . . . . . . . . . .|" + \
        "B W . W B . . . . . . . . . . . . . .|" + \
        "B W b W B . . . . . . . . . . . . . .|" + \
        "B W . W B . . . . . . . . . . . . . .|" + \
        "B W a W B . . . . . . . . . . . . . .|" + \
        ". B B B . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|"

        st, moves = parseboard.parse(board)

        self._assert_vital_point(st, WHITE, moves['a'], moves['b'])

    def test_nakade3_1_edge(self):
        board = \
        ". a B . . . . . . . . . . . . . . . .|" + \
        "b W B . . . . . . . . . . . . . . . .|" + \
        ". W B . . . . . . . . . . . . . . . .|" + \
        "W W B . . . . . . . . . . . . . . . .|" + \
        "B B B . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|"

        st, moves = parseboard.parse(board)

        self._assert_vital_point(st, WHITE, moves['a'], moves['b'])

    def test_nakade3_2(self):
        board = \
        "B B B B B B . . . . . . . . . . . . .|" + \
        "B W W W W B . . . . . . . . . . . . .|" + \
        "B W . b W B . . . . . . . . . . . . .|" + \
        "B W a . W B . . . . . . . . . . . . .|" + \
        "B B W W W B . . . . . . . . . . . . .|" + \
        ". B B B B B . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|"

        st, moves = parseboard.parse(board)

        self._assert_vital_point(st, WHITE, moves['a'], moves['b'])

    def test_nakade3_3(self):
        board = \
        ". B B B B B . . . . . . . . . . . . .|" + \
        "B B W W W B . . . . . . . . . . . . .|" + \
        "B W a . W B . . . . . . . . . . . . .|" + \
        "B W . b W B . . . . . . . . . . . . .|" + \
        "B W W W W B . . . . . . . . . . . . .|" + \
        "B B B B B B . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|"

        st, moves = parseboard.parse(board)

        self._assert_vital_point(st, WHITE, moves['a'], moves['b'])

    def test_nakade3_4(self):
        board = \
        "B B B B B . . . . . . . . . . . . . .|" + \
        "B W W W B B . . . . . . . . . . . . .|" + \
        "B W . a W B . . . . . . . . . . . . .|" + \
        "B W b . W B . . . . . . . . . . . . .|" + \
        "B W W W W B . . . . . . . . . . . . .|" + \
        "B B B B B B . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|"

        st, moves = parseboard.parse(board)

        self._assert_vital_point(st, WHITE, moves['a'], moves['b'])

    def test_nakade3_5(self):
        board = \
        "B B B B B B . . . . . . . . . . . . .|" + \
        "B W W W W B . . . . . . . . . . . . .|" + \
        "B W b . W B . . . . . . . . . . . . .|" + \
        "B W . a W B . . . . . . . . . . . . .|" + \
        "B W W W B B . . . . . . . . . . . . .|" + \
        "B B B B . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|"

        st, moves = parseboard.parse(board)

        self._assert_vital_point(st, WHITE, moves['a'], moves['b'])

    def test_nakade4_0(self):
        board = \
        ". B B B B B . . . . . . . . . . . . .|" + \
        ". B W W W B . . . . . . . . . . . . .|" + \
        "B B W . W B B . . . . . . . . . . . .|" + \
        "B W . b . W B . . . . . . . . . . . .|" + \
        "B W W a W W B . . . . . . . . . . . .|" + \
        "B B B B B B B . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|"

        st, moves = parseboard.parse(board)

        self._assert_vital_point(st, WHITE, moves['a'], moves['b'])

    def test_nakade4_1(self):
        board = \
        "B B B B . . . . . . . . . . . . . . .|" + \
        "B W W W B B . . . . . . . . . . . . .|" + \
        "B W . W W B . . . . . . . . . . . . .|" + \
        "B W b . a B . . . . . . . . . . . . .|" + \
        "B W . W W B . . . . . . . . . . . . .|" + \
        "B W W W B B . . . . . . . . . . . . .|" + \
        "B B B B . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|"

        st, moves = parseboard.parse(board)

        self._assert_vital_point(st, WHITE, moves['a'], moves['b'])

    def test_nakade4_2(self):
        board = \
        ". . B B B B . . . . . . . . . . . . .|" + \
        "B B W W W B . . . . . . . . . . . . .|" + \
        "B W W . W B . . . . . . . . . . . . .|" + \
        "B a . b W B . . . . . . . . . . . . .|" + \
        "B W W . W B . . . . . . . . . . . . .|" + \
        "B B W W W B . . . . . . . . . . . . .|" + \
        ". . B B B B . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|"

        st, moves = parseboard.parse(board)

        self._assert_vital_point(st, WHITE, moves['a'], moves['b'])

    def test_nakade4_3(self):
        board = \
        "B B B B B B B . . . . . . . . . . . .|" + \
        "B W W W W W B . . . . . . . . . . . .|" + \
        "B W . b . W B . . . . . . . . . . . .|" + \
        "B W W . W W B . . . . . . . . . . . .|" + \
        ". B W a W B . . . . . . . . . . . . .|" + \
        ". B B B B B . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|"

        st, moves = parseboard.parse(board)

        self._assert_vital_point(st, WHITE, moves['a'], moves['b'])

    def test_nakade5_0(self):
        board = \
        ". . B B B . . . . . . . . . . . . . .|" + \
        ". B W W W B . . . . . . . . . . . . .|" + \
        "B W W . W W B . . . . . . . . . . . .|" + \
        "B W . b . W B . . . . . . . . . . . .|" + \
        "B W a . W W B . . . . . . . . . . . .|" + \
        ". B W W W B . . . . . . . . . . . . .|" + \
        ". . B B B . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|"

        st, moves = parseboard.parse(board)

        self._assert_vital_point(st, WHITE, moves['a'], moves['b'])

    def test_nakade5_1(self):
        board = \
        ". . B B B . . . . . . . . . . . . . .|" + \
        ". B W W W B . . . . . . . . . . . . .|" + \
        "B W a . W B . . . . . . . . . . . . .|" + \
        "B W . b W B . . . . . . . . . . . . .|" + \
        "B W . . W B . . . . . . . . . . . . .|" + \
        "B W W W W B . . . . . . . . . . . . .|" + \
        ". B B B B . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|"

        st, moves = parseboard.parse(board)

        self._assert_vital_point(st, WHITE, moves['a'], moves['b'])

    def test_nakade5_2(self):
        board = \
        ". B B B B . . . . . . . . . . . . . .|" + \
        "B W W W W B . . . . . . . . . . . . .|" + \
        "B W . . W W B . . . . . . . . . . . .|" + \
        "B W . b . a B . . . . . . . . . . . .|" + \
        "B W W W W W B . . . . . . . . . . . .|" + \
        ". B B B B B . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|"

        st, moves = parseboard.parse(board)

        self._assert_vital_point(st, WHITE, moves['a'], moves['b'])

    def test_nakade5_3(self):
        board = \
        ". B B B B . . . . . . . . . . . . . .|" + \
        "B W W W W B . . . . . . . . . . . . .|" + \
        "B a . . W B . . . . . . . . . . . . .|" + \
        "B W b . W B . . . . . . . . . . . . .|" + \
        "B W . W W B . . . . . . . . . . . . .|" + \
        "B W W W B . . . . . . . . . . . . . .|" + \
        ". B B B . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|"

        st, moves = parseboard.parse(board)

        self._assert_vital_point(st, WHITE, moves['a'], moves['b'])

    """
    def test_nakade5_3_0(self):
        board = \
        ". W . B W b W B W . . . . . . . . . .|" + \
        "W . W B . . a B W . . . . . . . . . .|" + \
        ". W B . B B B W . W . . . . . . . . .|" + \
        ". W . B W W B W . . . . . . . . . . .|" + \
        "W B B . W B W B . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|"

        st, moves = parseboard.parse(board)

        self._assert_vital_point(st, BLACK, moves['a'], moves['b'])
    """

    def test_nakade5_4(self):
        board = \
        ". B B B B B . . . . . . . . . . . . .|" + \
        "B W W W W W B . . . . . . . . . . . .|" + \
        "B W . b . W B . . . . . . . . . . . .|" + \
        "B W W . . W B . . . . . . . . . . . .|" + \
        ". B W W a W B . . . . . . . . . . . .|" + \
        ". . B B B B . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|"

        st, moves = parseboard.parse(board)

        self._assert_vital_point(st, WHITE, moves['a'], moves['b'])

    def test_nakade5_5(self):
        board = \
        ". B B B B . . . . . . . . . . . . . .|" + \
        "B W W W W B . . . . . . . . . . . . .|" + \
        "B W . . W B . . . . . . . . . . . . .|" + \
        "B W b . a B . . . . . . . . . . . . .|" + \
        "B W . W W B . . . . . . . . . . . . .|" + \
        "B W W W B . . . . . . . . . . . . . .|" + \
        ". B B B . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|"

        st, moves = parseboard.parse(board)

        self._assert_vital_point(st, WHITE, moves['a'], moves['b'])

    def test_nakade5_6(self):
        board = \
        ". B B B B B . . . . . . . . . . . . .|" + \
        "B W W W W W B . . . . . . . . . . . .|" + \
        "B W . b . a B . . . . . . . . . . . .|" + \
        "B W . . W W B . . . . . . . . . . . .|" + \
        "B W W W W B . . . . . . . . . . . . .|" + \
        ". B B B B . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|"

        st, moves = parseboard.parse(board)

        self._assert_vital_point(st, WHITE, moves['a'], moves['b'])

    def test_nakade5_7(self):
        board = \
        ". B B B B . . . . . . . . . . . . . .|" + \
        "B W a W W B . . . . . . . . . . . . .|" + \
        "B W . . W B . . . . . . . . . . . . .|" + \
        "B W . b W B . . . . . . . . . . . . .|" + \
        "B W W . W B . . . . . . . . . . . . .|" + \
        ". B W W W B . . . . . . . . . . . . .|" + \
        ". . B B B . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|"

        st, moves = parseboard.parse(board)

        self._assert_vital_point(st, WHITE, moves['a'], moves['b'])

    def test_nakade5_8(self):
        board = \
        ". . B B B B . . . . . . . . . . . . .|" + \
        ". B W a W W B . . . . . . . . . . . .|" + \
        "B W W . . W B . . . . . . . . . . . .|" + \
        "B W . b . W B . . . . . . . . . . . .|" + \
        "B W W W W W W . . . . . . . . . . . .|" + \
        ". B B B B W . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|"

        st, moves = parseboard.parse(board)

        self._assert_vital_point(st, WHITE, moves['a'], moves['b'])

    def test_nakade6_0(self):
        board = \
        ". . B B B . . . . . . . . . . . . . .|" + \
        ". B W a W B . . . . . . . . . . . . .|" + \
        "B W W . W W B . . . . . . . . . . . .|" + \
        "B W . b . W B . . . . . . . . . . . .|" + \
        "B W . . W W B . . . . . . . . . . . .|" + \
        "B W W W W B . . . . . . . . . . . . .|" + \
        ". B B B B . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|"

        st, moves = parseboard.parse(board)

        self._assert_vital_point(st, WHITE, moves['a'], moves['b'])

    def test_nakade6_1(self):
        board = \
        ". . B B B . . . . . . . . . . . . . .|" + \
        ". B W W W B . . . . . . . . . . . . .|" + \
        "B W . . W W B . . . . . . . . . . . .|" + \
        "B W . b . a B . . . . . . . . . . . .|" + \
        "B W . W W W B . . . . . . . . . . . .|" + \
        "B W W W B B . . . . . . . . . . . . .|" + \
        ". B B B B . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|"

        st, moves = parseboard.parse(board)

        self._assert_vital_point(st, WHITE, moves['a'], moves['b'])

    def test_nakade6_2(self):
        board = \
        ". . B B B . . . . . . . . . . . . . .|" + \
        ". B W W W B . . . . . . . . . . . . .|" + \
        "B W a . . W B . . . . . . . . . . . .|" + \
        "B W . b . W B . . . . . . . . . . . .|" + \
        "B W W . W W B . . . . . . . . . . . .|" + \
        ". B W W W B . . . . . . . . . . . . .|" + \
        ". . B B B . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|"

        st, moves = parseboard.parse(board)

        self._assert_vital_point(st, WHITE, moves['a'], moves['b'])

    def test_nakade6_3(self):
        board = \
        ". . B B B . . . . . . . . . . . . . .|" + \
        ". B W W W B . . . . . . . . . . . . .|" + \
        "B W a . W W B . . . . . . . . . . . .|" + \
        "B W . b . W B . . . . . . . . . . . .|" + \
        "B W W . . W B . . . . . . . . . . . .|" + \
        ". B W W W B . . . . . . . . . . . . .|" + \
        ". . B B B . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|" + \
        ". . . . . . . . . . . . . . . . . . .|"

        st, moves = parseboard.parse(board)

        self._assert_vital_point(st, WHITE, moves['a'], moves['b'])

    def _assert_nakade_self_atari(self, st, self_atari_move, color):
        pos = self_atari_move[0]*19+self_atari_move[1]
        is_nakade_self_atari = nakade.is_nakade_self_atari(st, pos, color)
        self.assertTrue(is_nakade_self_atari)

    def _assert_vital_point(self, st, last_color, last_move, expected_vital_point):
        st.current_player = last_color
        st.do_move(last_move)
        vital_point = nakade.search_nakade(st)
        self.assertTrue(divmod(vital_point, 19) == expected_vital_point)


if __name__ == '__main__':
    unittest.main()
